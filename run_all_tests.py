# run_all_tests.py
import pytest
import time
import os


def run_all_tests():
    """–ó–∞–ø—É—Å–∫–∞–µ—Ç –í–°–ï —Ç–µ—Å—Ç—ã –≤ –æ–¥–Ω–æ–π —Å–µ—Å—Å–∏–∏ pytest"""
    print("üöÄ –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤ –≤ –æ–¥–Ω–æ–π —Å–µ—Å—Å–∏–∏...")

    # –°–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –Ω–∞—à–∏—Ö —Å—å—é—Ç–æ–≤
    test_files = [
        "tests/ui/test_smoke_suite.py",
        "tests/ui/test_auth_suite.py",
        "tests/ui/test_search_suite.py",
        "tests/ui/test_navigation_suite.py",
        "tests/ui/test_negative_suite.py"
    ]

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∫–∏–µ —Ñ–∞–π–ª—ã —Å—É—â–µ—Å—Ç–≤—É—é—Ç
    existing_files = []
    for file in test_files:
        if os.path.exists(file):
            existing_files.append(file)
            print(f"‚úÖ –ù–∞–π–¥–µ–Ω: {file}")
        else:
            print(f"‚ùå –û—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç: {file}")

    if not existing_files:
        print("‚ö†Ô∏è  –ù–µ—Ç —Ç–µ—Å—Ç–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤ –¥–ª—è –∑–∞–ø—É—Å–∫–∞!")
        return

    # –ó–∞–ø—É—Å–∫–∞–µ–º –í–°–ï —Ç–µ—Å—Ç—ã –≤ –æ–¥–Ω–æ–π —Å–µ—Å—Å–∏–∏ pytest
    print(f"\nüéØ –ó–∞–ø—É—Å–∫–∞–µ–º {len(existing_files)} —Ñ–∞–π–ª–æ–≤...")

    try:
        # –ó–∞–ø—É—Å–∫–∞–µ–º pytest –Ω–∞–ø—Ä—è–º—É—é, –∞ –Ω–µ —á–µ—Ä–µ–∑ subprocess
        exit_code = pytest.main([
            *existing_files,
            "--alluredir", "allure-results",
            "-v",
            "--tb=short"  # –ö–æ—Ä–æ—Ç–∫–∏–µ tracebacks
        ])

        if exit_code == 0:
            print("\nüéâ –í–°–ï –¢–ï–°–¢–´ –ü–†–û–®–õ–ò –£–°–ü–ï–®–ù–û!")
        else:
            print(f"\n‚ö†Ô∏è  –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã —É–ø–∞–ª–∏. –ö–æ–¥ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è: {exit_code}")

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Ç–µ—Å—Ç–æ–≤: {e}")


if __name__ == "__main__":
    run_all_tests()
